{
	"format_version": "1.21.90",
	"minecraft:entity": {
		"description": {
			"identifier": "koprium:koprium_paracore",
			"spawn_category": "monster",
			"is_spawnable": true,
			"is_summonable": true
		},
		"component_groups": {},
		"components": {
			"minecraft:is_hidden_when_invisible": {},
			"minecraft:loot": {
				"table": "loot_tables/koprium_energy_core.json"
			},
			"minecraft:nameable": {},
			"minecraft:type_family": {
				"family": [
					"monster",
					"mob",
					"koprium",
					"paracore"
				]
			},
			"minecraft:collision_box": {
				"width": 0.6,
				"height": 0.6
			},
			"minecraft:movement.basic": {},
			"minecraft:navigation.walk": {
				"is_amphibious": true,
				"can_pass_doors": true,
				"can_walk": true,
				"can_break_doors": true
			},
			"minecraft:jump.static": {},
			"minecraft:can_climb": {},
			"minecraft:health": {
				"value": 20,
				"max": 20
			},
			"minecraft:behavior.random_stroll": {
				"priority": 7,
				"speed_multiplier": 1
			},
			"minecraft:behavior.look_at_player": {
				"priority": 8,
				"look_distance": 6,
				"probability": 0.02
			},
			"minecraft:behavior.random_look_around": {
				"priority": 9
			},
			"minecraft:behavior.nearest_attackable_target": {
				"priority": 2,
				"must_see": false,
				"reselect_targets": true,
				"within_radius": 64,
				"entity_types": [
					{
						"filters": {
							"all_of": [
								{
									"test": "is_family",
									"subject": "other",
									"value": "koprium"
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "paracore",
									"operator": "!="
								},
								{
									"test": "is_family",
									"subject": "other",
									"value": "pylon",
									"operator": "!="
								},
								{
									"any_of": [
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_1"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_1"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_2"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_2"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_3"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_3"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_4"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_4"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_5"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_5"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_6"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_6"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_7"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_7"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_8"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_8"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_9"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_9"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_10"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_10"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_11"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_11"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_12"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_12"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_13"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_13"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_14"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_14"
												}
											]
										},
										{
											"all_of": [
												{
													"test": "has_tag",
													"subject": "self",
													"operator": "==",
													"value": "paracore_15"
												},
												{
													"test": "has_tag",
													"subject": "other",
													"operator": "==",
													"value": "paracore_15"
												}
											]
										}
									]
								}
							]
						},
						"max_dist": 64
					}
				]
			},
			"minecraft:physics": {},
			"minecraft:pushable": {
				"is_pushable": true,
				"is_pushable_by_piston": true
			},
			"minecraft:conditional_bandwidth_optimization": {},
			"minecraft:movement": {
				"value": 0.23
			},
			"minecraft:experience_reward": {
				"on_death": "query.last_hit_by_player ? 5 + (query.equipment_count * Math.Random(1,3)) : 0"
			},
			"minecraft:behavior.melee_attack": {
				"priority": 5,
				"speed_multiplier": 0.9
			},
			"minecraft:attack": {
				"damage": 0
			},
			"minecraft:damage_sensor": {
				"triggers": [
					{
						"on_damage": {
							"filters": [
								{
									"test": "is_family",
									"subject": "other",
									"value": "koprium"
								}
							]
						},
						"deals_damage": "no"
					},
					{
						"on_damage": {
							"filters": {
								"test": "has_tag",
								"subject": "self",
								"operator": "==",
								"value": "hasParacore"
							}
						},
						"deals_damage": "no"
					}
				]
			},
			"minecraft:target_nearby_sensor": {
				"inside_range": 4,
				"outside_range": 8,
				"on_inside_range": {
					"event": "koprium:inside_range"
				},
				"on_outside_range": {
					"event": "koprium:outsite_range"
				}
			},
			"minecraft:follow_range": {
				"value": 64,
				"max": 64
			},
			"minecraft:despawn": {
				"despawn_from_distance": {}
			},
			"minecraft:fire_immune": {},
			"minecraft:on_death": {
				"event": "koprium:paracore_death"
			}
		},
		"events": {
			"koprium:inside_range": {
				"queue_command": {
					"command": [
						"effect @s slowness infinite 90 true"
					]
				}
			},
			"koprium:outsite_range": {
				"queue_command": {
					"command": [
						"effect @s clear slowness"
					]
				}
			},
			"koprium:paracore_death": {}
		}
	}
}